msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2016-07-27 03:17+0200\n"
"PO-Revision-Date: 2016-07-27 03:17+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: None\n"
"Language: en-US \n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Publican v4.3.0\n"

msgid "Introduction"
msgstr ""

msgid "Qlustar Clusters"
msgstr ""

msgid "A Qlustar HPC cluster is designed to boot and manage compute or storage nodes (hosts) over the network and make them run a minimal OS (Operating System) image in RAM. Local disks (if present) are only used to preserve log files across boots and for temporary storage (e.g. for compute jobs). One or more head-nodes deliver the boot images to the nodes. Additionally, a small <firstterm>NFS</firstterm> share containing part of the configuration space for the nodes is exported from one of the head-nodes. Optionally, the RAM-based root FS (file-system) can be supplemented by a global <link linkend=\"sec-UnionFS-Chroots\">UnionFS chroot</link> to support software not already contained in the boot images themselves. The head-node(s) of the cluster typically provides <firstterm>TFTP/PXE boot services</firstterm>, <firstterm>DHCP service</firstterm>, <firstterm>NIS service</firstterm>, <firstterm>torque</firstterm> or <firstterm>slurm resource management</firstterm> etc. to the cluster. The management of these and all cluster-related components of a <productname>Qlustar</productname> installation in general can easily be accomplished through a single administration interface: <application>QluMan</application>, the <literal>Qlustar Management interface</literal>."
msgstr ""

msgid "The <application>QluMan</application> GUI is <parameter>multi-user</parameter> as well as <parameter>multi-cluster</parameter> capable: Different users are allowed to work simultaneously with the GUI. Changes made by one user are updated and visible in real-time in the windows opened by all the other users. On the other hand, it is possible to manage a virtually unlimited number of clusters within a single instance of the <application>QluMan</application> GUI at the same time. Each cluster is shown in a tab or in a separate main window."
msgstr ""

msgid "Functionality Overview"
msgstr ""

msgid "A central part of Qlustar are its pre-configured <literal>modular OS images</literal>. Different nodes may have different hardware or need to provide specific and varying functionality/services. Therefore, to optimize the use of hardware resources and increase stability/security, Qlustar does not come with just one boot image that covers every use-case. Instead, a number of <literal>image modules</literal> with different software components are provided from which <literal>individual custom OS images</literal> can be created as needed. A Qlustar OS image just contains what is actually required to accomplish the tasks of a node, nothing more. See below for more details about configuring <link linkend=\"sec-Qlustar-OS-Images\">OS images</link>)"
msgstr ""

msgid "But providing different OS images is still not enough for a flexible yet easily manageable cluster: A node booting a generated image also receives extra configuration options via DHCP and via NFS at boot time, thus allowing to fine-tune the OS configuration at run-time. E.g. it is possible to determine how the local disks are to be used (if any are present), whether additional services like <firstterm>OpenSM</firstterm> or <firstterm>samba</firstterm> should be enabled/disabled and a lot more. Four different configuration/property categories exist in <application>QluMan</application>:"
msgstr ""

msgid "<xref linkend=\"Generic-Properties\" xrefstyle=\"template:Generic Properties\" /> are simple on/off options or key+value pairs applicable to groups of nodes, e.g. to flag the reformatting of the local disks at the next boot, add torque node properties, etc."
msgstr ""

msgid "<xref linkend=\"chap-Config-Classes\" xrefstyle=\"template:Config Classes\" /> handle more complex configurations like boot/disk configs, DHCP, etc."
msgstr ""

msgid "<xref linkend=\"Hardware-Properties\" xrefstyle=\"template:Hardware Properties\" /> are not used to configure the nodes themselves but describe their hardware configuration and are of importance e.g. for the slurm or torque resource managers and/or inventory management."
msgstr ""

msgid "Finally, <xref linkend=\"Specific-Properties\" xrefstyle=\"template:Specific Properties\" /> are properties that are unique to a particular node, like its serial number. Therefore, these properties can only be assigned to individual nodes."
msgstr ""

msgid "Of course, one can configure every host in a cluster individually. But in most clusters, there are large groups of hosts that should be configured identically. However, even if there are several groups, they might share some properties/configurations but not all of them. To provide a simple handling of such scenarios, <application>QluMan</application> allows to combine generic properties, hardware properties and config classes each into sets. Moreover, it is possible to combine exactly one generic property, one hardware property and one config set into a <classname>Host Template</classname>. Assigning a Host Template to a group of hosts makes it possible to specify their complete properties and configuration settings with a single click. Nonetheless, for maximum flexibility, it is also allowed to override or extend the settings from the template of a host by assigning either one of the sets and/or individual properties/config classes to it. In case of conflicts, values from individual properties/config classes have highest priority followed by set values and finally the Host Template values. For more details on this see <xref linkend=\"sec-Configuring-Hosts\" />."
msgstr ""

